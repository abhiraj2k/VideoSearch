{"version":3,"sources":["Component/SearchBar.js","Component/VideoDetail.js","Component/VideoItem.js","Component/VideoList.js","apis/youtube.js","Component/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","onSubmit","className","this","type","onChange","Component","VideoDetail","video","title","src","id","videoId","frameborder","snippet","description","VideoItem","onVideoSelect","onClick","thumbnails","medium","url","alt","VideoList","videos","renderedList","map","key","axios","create","baseURL","params","part","maxResults","App","selectedVideo","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"8UAoCeA,G,YAjCf,4MAEEC,MAAQ,CAAEC,KAAM,IAFlB,EAIEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,KAAME,EAAEE,OAAOC,SALnC,EAQEC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAVnC,uDAcI,OACE,yBAAKU,UAAU,cACb,0BAAMA,UAAU,OAAOD,SAAUE,KAAKL,cACpC,4BACE,uCADF,WAIA,2BACEM,KAAK,OACLF,UAAU,GACVL,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,sBAzB3B,GAA+Ba,cCuBhBC,G,MAvBK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAErB,OAAKA,EAKH,yBAAKN,UAAU,mBACb,yBAAKA,UAAU,oBACb,4BACEO,MAAM,eACNC,IAAG,wCAAmCF,EAAMG,GAAGC,SAC/CC,YAAY,OAGhB,yBAAKX,UAAU,eACb,4BAAKM,EAAMM,QAAQL,OACnB,4BAAKD,EAAMM,QAAQC,eAdhB,gCCWIC,G,MAdG,SAAC,GAA8B,IAA5BR,EAA2B,EAA3BA,MAAOS,EAAoB,EAApBA,cAG1B,OACE,yBAAKf,UAAU,OAAOgB,QAAS,kBAAMD,EAAcT,KACjD,yBACEE,IAAKF,EAAMM,QAAQK,WAAWC,OAAOC,IACrCC,IAAKd,EAAMM,QAAQL,QAErB,yBAAKP,UAAU,SAASM,EAAMM,QAAQL,UCM7Bc,G,MAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQP,EAAoB,EAApBA,cAErBQ,EAAeD,EAAOE,KAAI,SAAClB,GAC/B,OACE,kBAAC,EAAD,CACEmB,IAAKnB,EAAMG,GAAGC,QACdK,cAAeA,EACfT,MAAOA,OAIb,OAAO,yBAAKN,UAAU,QAAQuB,K,QCZjBG,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCACTC,OAAQ,CACNC,KAAM,UACNC,WAAY,EACZN,IAPQ,6CC2CGO,EArCf,4MAEE3C,MAAQ,CAAEiC,OAAQ,GAAIW,cAAe,MAFvC,EAIErC,aAJF,uCAIiB,WAAON,GAAP,eAAA4C,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5CP,OAAQ,CAAEQ,EAAG/C,KAFF,OACPgD,EADO,OAIb,EAAK7C,SAAS,CACZ6B,OAAQgB,EAASC,KAAKC,MACtBP,cAAeK,EAASC,KAAKC,MAAM,KANxB,2CAJjB,wDAcEzB,cAAgB,SAACT,GACf,EAAKb,SAAS,CAAEwC,cAAe3B,KAfnC,uDAmBI,OACE,yBAAKN,UAAU,aACb,kBAAC,EAAD,CAAWD,SAAUE,KAAKL,eAC1B,yBAAKI,UAAU,WACb,kBAAC,EAAD,CAAaM,MAAOL,KAAKZ,MAAM4C,gBAC/B,yBAAKjC,UAAU,cACb,kBAAC,EAAD,CACEe,cAAed,KAAKc,cACpBO,OAAQrB,KAAKZ,MAAMiC,WAIzB,yBAAKtB,UAAU,UAAf,4BA/BR,GAAyBI,aCHzBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.4e359e5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport class SearchBar extends Component {\r\n  // Initialisin state variable.\r\n  state = { term: \"\" };\r\n  // Set state when input changes.\r\n  onInputChange = (e) => {\r\n    this.setState({ term: e.target.value });\r\n  };\r\n  // Passing the search term to the parent component\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n  // Render method\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar\">\r\n        <form className=\"form\" onSubmit={this.onFormSubmit}>\r\n          <h3>\r\n            <span>Video</span> Search\r\n          </h3>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"\"\r\n            value={this.state.term}\r\n            onChange={this.onInputChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./VideoDetail.css\";\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  // Return nothing if video is not present\r\n  if (!video) {\r\n    return <div></div>;\r\n  }\r\n  // If video is present, show it on the screen\r\n  return (\r\n    <div className=\"video-container\">\r\n      <div className=\"video-responsive\">\r\n        <iframe\r\n          title=\"viedo player\"\r\n          src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n          frameborder=\"0\"\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"description\">\r\n        <h2>{video.snippet.title}</h2>\r\n        <h5>{video.snippet.description}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from \"react\";\r\nimport \"./VideoItem.css\";\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  // Rendering a video item\r\n  // Passing selected video to parent component\r\n  return (\r\n    <div className=\"card\" onClick={() => onVideoSelect(video)}>\r\n      <img\r\n        src={video.snippet.thumbnails.medium.url}\r\n        alt={video.snippet.title}\r\n      />\r\n      <div className=\"title\">{video.snippet.title}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\nimport \"./VideoList.css\";\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  // Showing a particular video item in the form of lists\r\n  const renderedList = videos.map((video) => {\r\n    return (\r\n      <VideoItem\r\n        key={video.id.videoId}\r\n        onVideoSelect={onVideoSelect}\r\n        video={video}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"list\">{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import axios from \"axios\";\r\nconst KEY = \"AIzaSyA1mGEfddR5VpxtKpRhSrMmeGgmsvtvqk0\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3/\",\r\n  params: {\r\n    part: \"snippet\",\r\n    maxResults: 5,\r\n    key: KEY,\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoDetail from \"./VideoDetail\";\r\nimport VideoList from \"./VideoList\";\r\nimport youtube from \"../apis/youtube\";\r\n\r\nexport class App extends Component {\r\n  // States.\r\n  state = { videos: [], selectedVideo: null };\r\n  // Async call to Youtube API and passing list of videos to the state | Default selected video is the first from the list.\r\n  onFormSubmit = async (term) => {\r\n    const response = await youtube.get(\"search/\", {\r\n      params: { q: term },\r\n    });\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0],\r\n    });\r\n  };\r\n  // Adding selected video to state.\r\n  onVideoSelect = (video) => {\r\n    this.setState({ selectedVideo: video });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <SearchBar onSubmit={this.onFormSubmit} />\r\n        <div className=\"content\">\r\n          <VideoDetail video={this.state.selectedVideo} />\r\n          <div className=\"video-list\">\r\n            <VideoList\r\n              onVideoSelect={this.onVideoSelect}\r\n              videos={this.state.videos}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">Copyrights @YouTube</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Component/App.js\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}